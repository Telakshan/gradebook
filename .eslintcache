[{"C:\\Users\\telak\\OneDrive\\Desktop\\Folder\\gradebook\\gradebook\\src\\index.js":"1","C:\\Users\\telak\\OneDrive\\Desktop\\Folder\\gradebook\\gradebook\\src\\reportWebVitals.js":"2","C:\\Users\\telak\\OneDrive\\Desktop\\Folder\\gradebook\\gradebook\\src\\App.js":"3","C:\\Users\\telak\\OneDrive\\Desktop\\Folder\\gradebook\\gradebook\\src\\Landing\\Landing.js":"4","C:\\Users\\telak\\OneDrive\\Desktop\\Folder\\gradebook\\gradebook\\src\\shared\\components\\Navigation\\NavBar.js":"5","C:\\Users\\telak\\OneDrive\\Desktop\\Folder\\gradebook\\gradebook\\src\\shared\\components\\Button\\Button.js":"6","C:\\Users\\telak\\OneDrive\\Desktop\\Folder\\gradebook\\gradebook\\src\\Authorization\\Register.js":"7","C:\\Users\\telak\\OneDrive\\Desktop\\Folder\\gradebook\\gradebook\\src\\Authorization\\Signin.js":"8","C:\\Users\\telak\\OneDrive\\Desktop\\Folder\\gradebook\\gradebook\\src\\courses\\components\\Course.js":"9","C:\\Users\\telak\\OneDrive\\Desktop\\Folder\\gradebook\\gradebook\\src\\courses\\components\\CourseName.js":"10","C:\\Users\\telak\\OneDrive\\Desktop\\Folder\\gradebook\\gradebook\\src\\courses\\components\\Assignments.js":"11","C:\\Users\\telak\\OneDrive\\Desktop\\Folder\\gradebook\\gradebook\\src\\courses\\components\\Assignment.js":"12","C:\\Users\\telak\\OneDrive\\Desktop\\Folder\\gradebook\\gradebook\\src\\store.js":"13","C:\\Users\\telak\\OneDrive\\Desktop\\Folder\\gradebook\\gradebook\\src\\reducers\\index.js":"14","C:\\Users\\telak\\OneDrive\\Desktop\\Folder\\gradebook\\gradebook\\src\\reducers\\alert.js":"15","C:\\Users\\telak\\OneDrive\\Desktop\\Folder\\gradebook\\gradebook\\src\\actions\\types.js":"16","C:\\Users\\telak\\OneDrive\\Desktop\\Folder\\gradebook\\gradebook\\src\\actions\\alert.js":"17","C:\\Users\\telak\\OneDrive\\Desktop\\Folder\\gradebook\\gradebook\\src\\shared\\components\\Alert\\Alert.js":"18","C:\\Users\\telak\\OneDrive\\Desktop\\Folder\\gradebook\\gradebook\\src\\actions\\auth.js":"19","C:\\Users\\telak\\OneDrive\\Desktop\\Folder\\gradebook\\gradebook\\src\\reducers\\auth.js":"20","C:\\Users\\telak\\OneDrive\\Desktop\\Folder\\gradebook\\gradebook\\src\\utils\\setAuthToken.js":"21","C:\\Users\\telak\\OneDrive\\Desktop\\Folder\\gradebook\\gradebook\\src\\routing\\PrivateRoute.js":"22","C:\\Users\\telak\\OneDrive\\Desktop\\Folder\\gradebook\\gradebook\\src\\NewsFeed\\Dashboard.js":"23","C:\\Users\\telak\\OneDrive\\Desktop\\Folder\\gradebook\\gradebook\\src\\reducers\\profile.js":"24","C:\\Users\\telak\\OneDrive\\Desktop\\Folder\\gradebook\\gradebook\\src\\actions\\profile.js":"25","C:\\Users\\telak\\OneDrive\\Desktop\\Folder\\gradebook\\gradebook\\src\\Loading\\Loading.js":"26","C:\\Users\\telak\\OneDrive\\Desktop\\Folder\\gradebook\\gradebook\\src\\ProfileForm\\CreateProfile.js":"27","C:\\Users\\telak\\OneDrive\\Desktop\\Folder\\gradebook\\gradebook\\src\\NewsFeed\\DashboardAction.js":"28","C:\\Users\\telak\\OneDrive\\Desktop\\Folder\\gradebook\\gradebook\\src\\ProfileForm\\EditProfile.js":"29","C:\\Users\\telak\\OneDrive\\Desktop\\Folder\\gradebook\\gradebook\\src\\courses\\components\\CoursePage.js":"30","C:\\Users\\telak\\OneDrive\\Desktop\\Folder\\gradebook\\gradebook\\src\\courses\\components\\CourseList.js":"31"},{"size":478,"mtime":1611448659244,"results":"32","hashOfConfig":"33"},{"size":362,"mtime":499162500000,"results":"34","hashOfConfig":"33"},{"size":2008,"mtime":1614295631333,"results":"35","hashOfConfig":"33"},{"size":944,"mtime":1614109771558,"results":"36","hashOfConfig":"33"},{"size":1658,"mtime":1614166233360,"results":"37","hashOfConfig":"33"},{"size":233,"mtime":1611567693928,"results":"38","hashOfConfig":"33"},{"size":2848,"mtime":1614024143261,"results":"39","hashOfConfig":"33"},{"size":1866,"mtime":1614107907548,"results":"40","hashOfConfig":"33"},{"size":1394,"mtime":1614169206277,"results":"41","hashOfConfig":"33"},{"size":421,"mtime":1611616496648,"results":"42","hashOfConfig":"33"},{"size":306,"mtime":1611629710931,"results":"43","hashOfConfig":"33"},{"size":518,"mtime":1614289964776,"results":"44","hashOfConfig":"33"},{"size":397,"mtime":1613865672199,"results":"45","hashOfConfig":"33"},{"size":199,"mtime":1614045755795,"results":"46","hashOfConfig":"33"},{"size":394,"mtime":1613866674769,"results":"47","hashOfConfig":"33"},{"size":589,"mtime":1614280676249,"results":"48","hashOfConfig":"33"},{"size":348,"mtime":1613886266625,"results":"49","hashOfConfig":"33"},{"size":534,"mtime":1613886013679,"results":"50","hashOfConfig":"33"},{"size":2222,"mtime":1614118551580,"results":"51","hashOfConfig":"33"},{"size":1332,"mtime":1614280815170,"results":"52","hashOfConfig":"33"},{"size":264,"mtime":1613896412002,"results":"53","hashOfConfig":"33"},{"size":663,"mtime":1614042318345,"results":"54","hashOfConfig":"33"},{"size":1396,"mtime":1614270597927,"results":"55","hashOfConfig":"33"},{"size":907,"mtime":1614118781083,"results":"56","hashOfConfig":"33"},{"size":2138,"mtime":1614283892277,"results":"57","hashOfConfig":"33"},{"size":321,"mtime":1614110845002,"results":"58","hashOfConfig":"33"},{"size":2130,"mtime":1614127633730,"results":"59","hashOfConfig":"33"},{"size":412,"mtime":1614134206403,"results":"60","hashOfConfig":"33"},{"size":2944,"mtime":1614284412679,"results":"61","hashOfConfig":"33"},{"size":717,"mtime":1614289242989,"results":"62","hashOfConfig":"33"},{"size":532,"mtime":1614295648627,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"bz3rps",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"66"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"66"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"66"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"66"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"66"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"66"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"66"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"66"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"66"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"66"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"66"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"66"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"66"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"66"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\telak\\OneDrive\\Desktop\\Folder\\gradebook\\gradebook\\src\\index.js",[],["141","142"],"C:\\Users\\telak\\OneDrive\\Desktop\\Folder\\gradebook\\gradebook\\src\\reportWebVitals.js",[],"C:\\Users\\telak\\OneDrive\\Desktop\\Folder\\gradebook\\gradebook\\src\\App.js",["143","144","145","146"],"C:\\Users\\telak\\OneDrive\\Desktop\\Folder\\gradebook\\gradebook\\src\\Landing\\Landing.js",["147"],"import React from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport Button from \"../shared/components/Button/Button\";\r\nimport Signin from \"../Authorization/Signin\";\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport \"./Landing.css\";\r\n\r\nconst Landing = ({ isAuthenticated }) => {\r\n  if(isAuthenticated){\r\n    return <Redirect to='/dashboard' />\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"landing-add-courses\">\r\n        <h1>Welcome to gradebook</h1>\r\n\r\n        <h3>Social network for students</h3>\r\n\r\n        <h4>Keep track of your assignments</h4>\r\n\r\n        <Link to=\"/register\">\r\n          <Button name={\"Register\"} />\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nLanding.propTypes = {\r\n  isAuthenticated: PropTypes.bool,\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: state.auth.isAuthenticated\r\n})\r\n\r\nexport default connect(mapStateToProps)(Landing);\r\n","C:\\Users\\telak\\OneDrive\\Desktop\\Folder\\gradebook\\gradebook\\src\\shared\\components\\Navigation\\NavBar.js",["148","149"],"import React, {Fragment} from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport logo from \"../laptop-outline.svg\";\r\nimport Signin from \"../../../Authorization/Signin\";\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { logout } from '../../../actions/auth';\r\nimport \"./NavBar.css\";\r\n\r\nexport const NavBar = ({ auth: {isAuthenticated, loading}, logout}) => {\r\n\r\n  const style = {\r\n    height: '25px',\r\n    paddingRight: '5px',\r\n    paddingLeft: '5px',\r\n  }\r\n\r\n  const authLinks = (\r\n\r\n    <ul className=\"nav-menu\">\r\n\r\n      <li>\r\n        <Link to='/dashboard'>Dashboard</Link>\r\n      </li>\r\n        \r\n        <li>\r\n          <Link to=\"/course\">My Courses</Link>\r\n        </li>\r\n        <li>\r\n          <Link onClick={logout} to='/'>Sign out</Link>\r\n        </li>\r\n      </ul>\r\n\r\n  );\r\n\r\n  const guestLinks = (\r\n    \r\n    <ul className=\"nav-menu\">\r\n        \r\n        <li>\r\n          <Link to=\"/register\">Register</Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/signin\">Sign in</Link>\r\n        </li>\r\n      </ul>\r\n  );\r\n\r\n\r\n  \r\n  return (\r\n    <nav className=\"nav-bar\">\r\n     <Link className='logo' to='/'>\r\n     <img src={logo} style={style}></img>\r\n\r\n     </Link>\r\n\r\n      <Link to=\"/\">\r\n        <h1 className=\"logo-font\">gradebook</h1>\r\n      </Link>\r\n\r\n      {!loading && (<Fragment>{isAuthenticated ? authLinks : guestLinks}</Fragment>)}\r\n\r\n      \r\n    </nav>\r\n  );\r\n};\r\n\r\nNavBar.protoTypes = {\r\n  logout: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n})\r\n\r\nexport default connect(mapStateToProps, { logout })(NavBar);\r\n","C:\\Users\\telak\\OneDrive\\Desktop\\Folder\\gradebook\\gradebook\\src\\shared\\components\\Button\\Button.js",[],"C:\\Users\\telak\\OneDrive\\Desktop\\Folder\\gradebook\\gradebook\\src\\Authorization\\Register.js",["150","151"],"import React, { useState } from \"react\";\r\nimport Button from \"../shared/components/Button/Button\";\r\nimport axios from \"axios\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { setAlert } from \"../actions/alert\";\r\nimport { register } from \"../actions/auth\";\r\n\r\nimport \"./Auth.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Register = ({ setAlert, register, isAuthenticated }) => {\r\n  const [formData, setFormData] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n  });\r\n\r\n  const { name, email, password, confirmPassword } = formData;\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (password !== confirmPassword) {\r\n      setAlert(\"Passwords do not match\", \"danger\");\r\n    } else {\r\n      register({ name, email, password });\r\n    }\r\n  };\r\n\r\n  const onChange = (n) =>\r\n    setFormData({ ...formData, [n.target.name]: n.target.value });\r\n\r\n    if(isAuthenticated){\r\n      return <Redirect to='/dashboard'/>\r\n    }\r\n\r\n  return (\r\n    <div className=\"register\">\r\n      <h1>Register</h1>\r\n      <form className=\"form\" onSubmit={(e) => onSubmit(e)}>\r\n        <label>\r\n          <b>Name</b>\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter name here\"\r\n          value={name}\r\n          name=\"name\"\r\n          onChange={(n) => onChange(n)}\r\n          required\r\n        ></input>\r\n        <label>\r\n          <b>Email</b>\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"email\"\r\n          name=\"email\"\r\n          value={email}\r\n          onChange={(n) => onChange(n)}\r\n          required\r\n        ></input>\r\n\r\n        <label>\r\n          <b>Password</b>\r\n        </label>\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Enter password here\"\r\n          name=\"password\"\r\n          onChange={(n) => onChange(n)}\r\n          required\r\n          value={password}\r\n        ></input>\r\n\r\n        <label>\r\n          {\" \"}\r\n          <b>Confirm password</b>{\" \"}\r\n        </label>\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Confirm your password\"\r\n          name=\"confirmPassword\"\r\n          onChange={(n) => onChange(n)}\r\n          value={confirmPassword}\r\n        ></input>\r\n        <button type=\"submit\">Register</button>\r\n      </form>\r\n\r\n      <p>\r\n        Already have an account?{\" \"}\r\n        <Link to=\"/signin\" className=\"register-text\">\r\n          Sign in\r\n        </Link>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nRegister.prototype = {\r\n  setAlert: PropTypes.func.isRequired,\r\n  register: PropTypes.func.isRequired,\r\n  isAuthenticated: PropTypes.bool,\r\n};\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: state.auth.isAuthenticated\r\n})\r\n\r\nexport default connect(mapStateToProps , { setAlert, register })(Register);\r\n","C:\\Users\\telak\\OneDrive\\Desktop\\Folder\\gradebook\\gradebook\\src\\Authorization\\Signin.js",["152"],"import React, { Fragment, useState } from \"react\";\r\nimport { connect } from  'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { login } from '../actions/auth';\r\nimport {Link, Redirect} from 'react-router-dom';\r\nimport \"./Auth.css\";\r\n\r\nconst Signin = ({ login, isAuthenticated }) => {\r\n  const [formData, setFormData] = useState({\r\n\r\n    email: \"\",\r\n    password: \"\",\r\n    \r\n  });\r\n\r\n  const { email, password } = formData;\r\n\r\n  const onSubmit = async e => {\r\n      e.preventDefault();\r\n      login(email, password);\r\n  }\r\n\r\n  const onChange = (n) =>\r\n    setFormData({ ...formData, [n.target.name]: n.target.value });\r\n\r\n\r\n  if(isAuthenticated){\r\n    return <Redirect to='/dashboard'/>\r\n  }\r\n\r\n  return (\r\n     \r\n    <div className=\"register\">\r\n      <h1>Sign in</h1>\r\n      <form className=\"form\" onSubmit ={e => onSubmit(e)}>\r\n        \r\n        <label>\r\n          <b>Email</b>\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"email\"\r\n          name=\"email\"\r\n          value={email}\r\n          onChange={(n) => onChange(n)}\r\n          required\r\n        ></input>\r\n\r\n        <label>\r\n          <b>Password</b>\r\n        </label>\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Enter password here\"\r\n          name=\"password\"\r\n          onChange={(n) => onChange(n)}\r\n          required\r\n          value={password}\r\n          minLength='6'\r\n        ></input>\r\n\r\n        <button type='submit'>Sign in</button>\r\n      </form>\r\n      <p>Need to create an account? <Link to='/register' className='register-text'>Register</Link></p>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: state.auth.isAuthenticated\r\n})\r\n\r\nSignin.propTypes = {\r\n  login: PropTypes.func.isRequired,\r\n  isAuthenticated: PropTypes.bool,\r\n}\r\n\r\nexport default connect(mapStateToProps, { login })(Signin);\r\n","C:\\Users\\telak\\OneDrive\\Desktop\\Folder\\gradebook\\gradebook\\src\\courses\\components\\Course.js",["153"],"import React, { useState, Fragment } from \"react\";\r\nimport Button from \"../../shared/components/Button/Button\";\r\nimport CourseName from \"./CourseName\";\r\nimport Assignments from \"./Assignments\";\r\nimport \"./Course.css\";\r\n\r\nconst Course = () => {\r\n  const [assignments, setAssignment] = useState([\r\n    {\r\n      id: 1,\r\n      name: \"Assignment#1\",\r\n      duedate: \"Feb 5th 2:30PM\",\r\n      completed: true,\r\n      percentage: 12,\r\n      grade: 95,\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"Essay#1\",\r\n      duedate: \"Feb 20th 2:30PM\",\r\n      completed: false,\r\n      percentage: 25,\r\n      grade: 0,\r\n    },\r\n    {\r\n      id: 3,\r\n      name: \"Coding assignment\",\r\n      duedate: \"March 5th 2:30PM\",\r\n      completed: true,\r\n      percentage: 10,\r\n      grade: 100,\r\n    },\r\n  ]);\r\n\r\n  const deleteAssignment = (id) => {\r\n    setAssignment(assignments.filter((assignment) => assignment.id !== id));\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"course\">\r\n        <CourseName courseName=\"CS316\" />\r\n        {assignments.length > 0 ? (\r\n          <Assignments assignments={assignments} onDelete={deleteAssignment} />\r\n        ) : (\r\n          <h1>No assignments due</h1>\r\n        )}\r\n\r\n        <h3 className={assignments.length === 0 ? \"grade\" : \"d-grade\"}>\r\n          Total grade so far:{\" \"}\r\n        </h3>\r\n      </div>\r\n\r\n      \r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Course;\r\n","C:\\Users\\telak\\OneDrive\\Desktop\\Folder\\gradebook\\gradebook\\src\\courses\\components\\CourseName.js",[],"C:\\Users\\telak\\OneDrive\\Desktop\\Folder\\gradebook\\gradebook\\src\\courses\\components\\Assignments.js",[],"C:\\Users\\telak\\OneDrive\\Desktop\\Folder\\gradebook\\gradebook\\src\\courses\\components\\Assignment.js",[],"C:\\Users\\telak\\OneDrive\\Desktop\\Folder\\gradebook\\gradebook\\src\\store.js",[],"C:\\Users\\telak\\OneDrive\\Desktop\\Folder\\gradebook\\gradebook\\src\\reducers\\index.js",[],"C:\\Users\\telak\\OneDrive\\Desktop\\Folder\\gradebook\\gradebook\\src\\reducers\\alert.js",["154","155"],"import {SET_ALERT, REMOVE_ALERT} from '../actions/types';\r\n\r\nconst initialState = []\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case SET_ALERT:\r\n            return [...state, action.payload]\r\n        case REMOVE_ALERT:\r\n            return state.filter(alert => alert.id != action.payload);\r\n        default:\r\n            return state;\r\n    }\r\n}","C:\\Users\\telak\\OneDrive\\Desktop\\Folder\\gradebook\\gradebook\\src\\actions\\types.js",[],"C:\\Users\\telak\\OneDrive\\Desktop\\Folder\\gradebook\\gradebook\\src\\actions\\alert.js",[],"C:\\Users\\telak\\OneDrive\\Desktop\\Folder\\gradebook\\gradebook\\src\\shared\\components\\Alert\\Alert.js",[],"C:\\Users\\telak\\OneDrive\\Desktop\\Folder\\gradebook\\gradebook\\src\\actions\\auth.js",[],"C:\\Users\\telak\\OneDrive\\Desktop\\Folder\\gradebook\\gradebook\\src\\reducers\\auth.js",["156"],"import {\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n    USER_LOADED,\r\n    AUTH_ERROR,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n    token: localStorage.getItem('token'),\r\n    isAuthenticated: null,\r\n    loading: true,\r\n    user: null\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    const { type, payload } = action;\r\n\r\n    switch(type){\r\n        case REGISTER_SUCCESS:\r\n        case LOGIN_SUCCESS:\r\n            localStorage.setItem('token', payload.token);\r\n            return{\r\n                ...state,\r\n                ...payload,\r\n                isAuthenticated: true,\r\n                loading: false\r\n            }\r\n        case REGISTER_FAIL:\r\n        case AUTH_ERROR:\r\n        case LOGIN_FAIL:\r\n        case LOGOUT:\r\n            localStorage.removeItem('token');\r\n            return{\r\n                ...state,\r\n                token: null,\r\n                isAuthenticated: false,\r\n                loading: false\r\n            }\r\n        case USER_LOADED:\r\n            return{\r\n                ...state,\r\n                isAuthenticated: true,\r\n                loading: false,\r\n                user: payload\r\n            }\r\n        \r\n        default: \r\n            return state;\r\n\r\n    }\r\n}","C:\\Users\\telak\\OneDrive\\Desktop\\Folder\\gradebook\\gradebook\\src\\utils\\setAuthToken.js",[],"C:\\Users\\telak\\OneDrive\\Desktop\\Folder\\gradebook\\gradebook\\src\\routing\\PrivateRoute.js",[],"C:\\Users\\telak\\OneDrive\\Desktop\\Folder\\gradebook\\gradebook\\src\\NewsFeed\\Dashboard.js",["157"],"import React, { Fragment, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from 'react-router-dom';\r\nimport Loading from \"../Loading/Loading\";\r\nimport { getCurrentProfile } from \"../actions/profile\";\r\nimport DashboardAction from './DashboardAction';\r\n\r\nimport \"./Dashboard.css\";\r\n\r\nconst Dashboard = ({\r\n  getCurrentProfile,\r\n  auth: { user },\r\n  profile: { profile, loading },\r\n}) => {\r\n  useEffect(() => {\r\n    getCurrentProfile();\r\n  }, []);\r\n\r\n  return loading && profile === null ? (\r\n    <Loading />\r\n  ) : (\r\n    <Fragment>\r\n      <div className=\"dashboard\">\r\n        <h1>Dashboard</h1>\r\n        <p>Welcome {user && user.name}</p>\r\n        {profile !== null ? (\r\n          <Fragment>\r\n            <DashboardAction/>\r\n          </Fragment>\r\n        ) : (\r\n          <Fragment>\r\n              <p>You have not yet created a profile</p>\r\n              <Link to='/create-profile'>Create profile</Link>\r\n          </Fragment>\r\n          \r\n        )}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nDashboard.protoTypes = {\r\n  getCurrentProfile: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n  profile: state.profile,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getCurrentProfile })(Dashboard);\r\n","C:\\Users\\telak\\OneDrive\\Desktop\\Folder\\gradebook\\gradebook\\src\\reducers\\profile.js",["158","159"],"import { Profiler } from \"react\";\r\nimport { GET_PROFILE, PROFILE_ERROR, CLEAR_PROFILE } from \"../actions/types\";\r\n\r\n const initialState = {\r\n     profile: null,\r\n     profiles: [],\r\n     loading: true,\r\n     error: {}\r\n }\r\n\r\n export default function(state = initialState, action){\r\n     const { type, payload } = action;\r\n\r\n     switch(type){\r\n         case GET_PROFILE:\r\n             return {\r\n                 ...state,\r\n                 profile: payload,\r\n                 loading: false\r\n             }\r\n         case PROFILE_ERROR:\r\n             return{\r\n                 ...state,\r\n                 error: payload,\r\n                 loading: false\r\n             }\r\n         case CLEAR_PROFILE:\r\n             return{\r\n                     ...state,\r\n                     profile: null,\r\n                     loading: false\r\n                 }\r\n\r\n        default: \r\n             return state\r\n     }\r\n }","C:\\Users\\telak\\OneDrive\\Desktop\\Folder\\gradebook\\gradebook\\src\\actions\\profile.js",["160"],"import axios from 'axios';\r\nimport { setAlert } from './alert';\r\n\r\nimport {\r\n    CLEAR_PROFILE,\r\n    GET_PROFILE,\r\n    PROFILE_ERROR,\r\n    ACCOUNT_DELETED,\r\n} from './types';\r\n\r\nexport const createProfile = (formData, history, edit = false) => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n        const response = await axios.post('/api/profile', formData, config);\r\n\r\n        dispatch({\r\n            type: GET_PROFILE,\r\n            payload: response.data\r\n        });\r\n        dispatch(setAlert(edit ? 'Profile updated' : 'Profile created', 'success'));\r\n\r\n        if(!edit){\r\n            history.push('/dashboard');\r\n        }\r\n        \r\n    } catch (error) {\r\n        const errors = error.response.data.errors;\r\n\r\n        if(errors){\r\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\r\n        }\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: {msg: error.response.statusText, status: error.response.status}\r\n        })\r\n    }\r\n}\r\n\r\nexport const getCurrentProfile = () => async dispatch => {\r\n    try {\r\n        const res = await axios.get('/api/profile/me');\r\n        dispatch({\r\n            type: GET_PROFILE,\r\n            payload: res.data\r\n        })\r\n        \r\n    } catch (error) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: { msg: error.response.statusText, status: error.response.status }\r\n        });\r\n    }\r\n}\r\n\r\nexport const deleteAccount = () => async dispatch => {\r\n\r\n    if(window.confirm('Are you sure? This is permanent!')){\r\n\r\n        try {\r\n            const res = await axios.delete('/api/profile');\r\n            \r\n            dispatch({type: CLEAR_PROFILE});\r\n            dispatch({type: ACCOUNT_DELETED});\r\n\r\n            dispatch(setAlert('Your account has been permanently deleted'))\r\n\r\n        } catch (error) {\r\n            dispatch({\r\n                type: PROFILE_ERROR,\r\n                payload: { msg: error.response.statusText, status: error.response.status }\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n}\r\n","C:\\Users\\telak\\OneDrive\\Desktop\\Folder\\gradebook\\gradebook\\src\\Loading\\Loading.js",[],"C:\\Users\\telak\\OneDrive\\Desktop\\Folder\\gradebook\\gradebook\\src\\ProfileForm\\CreateProfile.js",["161"],"import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { createProfile } from '../actions/profile';\r\n\r\nimport './CreateProfile.css';\r\n\r\nconst CreateProfile = ({ createProfile, history }) => {\r\n  const [formData, setFormData] = useState({\r\n    college: \"\",\r\n    gradeLevel: \"\",\r\n    major: \"\",\r\n    shortBio: \"\",\r\n  });\r\n  const { college, gradeLevel, major, shortBio } = formData;\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    createProfile(formData , history)\r\n  };\r\n\r\n  const onChange = (n) =>\r\n    setFormData({ ...formData, [n.target.name]: n.target.value });\r\n  return (\r\n    <div className=\"register\">\r\n      <h1>Create profile</h1>\r\n      <form className=\"form\" onSubmit={(e) => onSubmit(e)}>\r\n        <label>\r\n          <b>College or University</b>\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter College here\"\r\n          name=\"college\"\r\n          value={college}\r\n          onChange={(n) => onChange(n)}\r\n        ></input>\r\n        <label>\r\n          <b>Grade Level</b>\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Grade level\"\r\n          name=\"gradeLevel\"\r\n          value={gradeLevel}\r\n          onChange={(n) => onChange(n)}\r\n        ></input>\r\n        <label>\r\n          <b>Major</b>\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Major\"\r\n          value={major}\r\n          name=\"major\"\r\n          onChange={(n) => onChange(n)}\r\n        ></input>\r\n        <label>\r\n          <b>A few sentences about yourself</b>\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          value={shortBio}\r\n          placeholder=\"Short bio here\"\r\n          name=\"shortBio\"\r\n          onChange={(n) => onChange(n)}\r\n        ></input>\r\n        <button type=\"submit\">Create</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nCreateProfile.propTypes = {\r\n  createProfile: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(null, { createProfile })(withRouter(CreateProfile));\r\n","C:\\Users\\telak\\OneDrive\\Desktop\\Folder\\gradebook\\gradebook\\src\\NewsFeed\\DashboardAction.js",["162"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport edit from './create-outline.svg';\r\n\r\nconst DashboardAction = () => {\r\n\r\n    const style = {\r\n        maxWidth: '25px'\r\n    }\r\n    return (\r\n        <div>\r\n            <Link to='/edit-profile'>\r\n                <img style={style} src={edit}></img>\r\n            </Link>\r\n    \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DashboardAction\r\n","C:\\Users\\telak\\OneDrive\\Desktop\\Folder\\gradebook\\gradebook\\src\\ProfileForm\\EditProfile.js",["163"],"import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { createProfile, getCurrentProfile } from \"../actions/profile\";\r\n\r\nimport \"./CreateProfile.css\";\r\n\r\nconst EditProfile = ({\r\n  profile: { profile, loading },\r\n  createProfile,\r\n  history,\r\n  getCurrentProfile,\r\n}) => {\r\n  const [formData, setFormData] = useState({\r\n    college: \"\",\r\n    gradeLevel: \"\",\r\n    major: \"\",\r\n    shortBio: \"\",\r\n  });\r\n  const { college, gradeLevel, major, shortBio } = formData;\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    createProfile(formData, history, true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getCurrentProfile();\r\n    setFormData({\r\n      college: loading || !profile.college ? \"\" : profile.college,\r\n      gradeLevel: loading || !profile.gradeLevel ? \"\" : profile.gradeLevel,\r\n      major: loading || !profile.gradeLevel ? \"\" : profile.major,\r\n      shortBio: loading || !profile.shortBio ? \"\" : profile.shortBio,\r\n    });\r\n  }, [loading]);\r\n\r\n  const onChange = (n) =>\r\n    setFormData({ ...formData, [n.target.name]: n.target.value });\r\n\r\n const style = {\r\n     marginLeft: \"5px\"\r\n }\r\n  return (\r\n    <div className=\"register\">\r\n      <h1>Edit profile</h1>\r\n      <form className=\"form\" onSubmit={(e) => onSubmit(e)}>\r\n        <label>\r\n          <b>College or University</b>\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter College here\"\r\n          name=\"college\"\r\n          value={college}\r\n          onChange={(n) => onChange(n)}\r\n        ></input>\r\n        <label>\r\n          <b>Grade Level</b>\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Grade level\"\r\n          name=\"gradeLevel\"\r\n          value={gradeLevel}\r\n          onChange={(n) => onChange(n)}\r\n        ></input>\r\n        <label>\r\n          <b>Major</b>\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Major\"\r\n          value={major}\r\n          name=\"major\"\r\n          onChange={(n) => onChange(n)}\r\n        ></input>\r\n        <label>\r\n          <b>A few sentences about yourself</b>\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          value={shortBio}\r\n          placeholder=\"Short bio here\"\r\n          name=\"shortBio\"\r\n          onChange={(n) => onChange(n)}\r\n        ></input>\r\n        <button type=\"submit\">Update</button>\r\n        <Link to=\"/dashboard\">\r\n          <button style={style}>Back</button>\r\n        </Link>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nEditProfile.propTypes = {\r\n  createProfile: PropTypes.func.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n  getCurrentProfile: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  profile: state.profile,\r\n});\r\n\r\nexport default connect(mapStateToProps, { createProfile, getCurrentProfile })(\r\n  withRouter(EditProfile)\r\n);\r\n","C:\\Users\\telak\\OneDrive\\Desktop\\Folder\\gradebook\\gradebook\\src\\courses\\components\\CoursePage.js",["164","165"],"import React, {useState} from 'react';\r\nimport CourseList from './CourseList';\r\n\r\nimport './CourseList.css';\r\n\r\nconst array = [\r\n    {\r\n      id: Math.random(),\r\n      name: 'CS316',\r\n      completed: false,\r\n      totalGrade: 95,\r\n    },\r\n    {\r\n      id: Math.random(),\r\n      name: 'CS344',\r\n      completed: false,\r\n      totalGrade: 100,\r\n    }\r\n  ];\r\n\r\n \r\n\r\nconst CoursePage = () => {\r\n\r\n    const[courses, setCourses] = useState(array);\r\n\r\n\r\n    return (\r\n        <div className='course-page'>\r\n\r\n            {\r\n                array.map(({name}) => (\r\n                    <CourseList courseName={name}/>\r\n                ))\r\n            }\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CoursePage\r\n","C:\\Users\\telak\\OneDrive\\Desktop\\Folder\\gradebook\\gradebook\\src\\courses\\components\\CourseList.js",[],{"ruleId":"166","replacedBy":"167"},{"ruleId":"168","replacedBy":"169"},{"ruleId":"170","severity":1,"message":"171","line":5,"column":3,"nodeType":"172","messageId":"173","endLine":5,"endColumn":11},{"ruleId":"174","severity":1,"message":"175","line":51,"column":75,"nodeType":"176","endLine":51,"endColumn":80},{"ruleId":"174","severity":1,"message":"175","line":52,"column":84,"nodeType":"176","endLine":52,"endColumn":89},{"ruleId":"174","severity":1,"message":"175","line":53,"column":80,"nodeType":"176","endLine":53,"endColumn":85},{"ruleId":"170","severity":1,"message":"177","line":4,"column":8,"nodeType":"172","messageId":"173","endLine":4,"endColumn":14},{"ruleId":"170","severity":1,"message":"177","line":4,"column":8,"nodeType":"172","messageId":"173","endLine":4,"endColumn":14},{"ruleId":"178","severity":1,"message":"179","line":54,"column":6,"nodeType":"180","endLine":54,"endColumn":36},{"ruleId":"170","severity":1,"message":"181","line":2,"column":8,"nodeType":"172","messageId":"173","endLine":2,"endColumn":14},{"ruleId":"170","severity":1,"message":"182","line":3,"column":8,"nodeType":"172","messageId":"173","endLine":3,"endColumn":13},{"ruleId":"170","severity":1,"message":"183","line":1,"column":17,"nodeType":"172","messageId":"173","endLine":1,"endColumn":25},{"ruleId":"170","severity":1,"message":"181","line":2,"column":8,"nodeType":"172","messageId":"173","endLine":2,"endColumn":14},{"ruleId":"184","severity":1,"message":"185","line":5,"column":1,"nodeType":"186","endLine":14,"endColumn":2},{"ruleId":"187","severity":1,"message":"188","line":10,"column":51,"nodeType":"189","messageId":"190","endLine":10,"endColumn":53},{"ruleId":"184","severity":1,"message":"185","line":18,"column":1,"nodeType":"186","endLine":54,"endColumn":2},{"ruleId":"191","severity":1,"message":"192","line":18,"column":6,"nodeType":"193","endLine":18,"endColumn":8,"suggestions":"194"},{"ruleId":"170","severity":1,"message":"195","line":1,"column":10,"nodeType":"172","messageId":"173","endLine":1,"endColumn":18},{"ruleId":"184","severity":1,"message":"185","line":11,"column":2,"nodeType":"186","endLine":37,"endColumn":3},{"ruleId":"170","severity":1,"message":"196","line":64,"column":19,"nodeType":"172","messageId":"173","endLine":64,"endColumn":22},{"ruleId":"170","severity":1,"message":"197","line":4,"column":10,"nodeType":"172","messageId":"173","endLine":4,"endColumn":14},{"ruleId":"178","severity":1,"message":"179","line":13,"column":17,"nodeType":"180","endLine":13,"endColumn":47},{"ruleId":"191","severity":1,"message":"198","line":36,"column":6,"nodeType":"193","endLine":36,"endColumn":15,"suggestions":"199"},{"ruleId":"170","severity":1,"message":"200","line":25,"column":11,"nodeType":"172","messageId":"173","endLine":25,"endColumn":18},{"ruleId":"170","severity":1,"message":"201","line":25,"column":20,"nodeType":"172","messageId":"173","endLine":25,"endColumn":30},"no-native-reassign",["202"],"no-negated-in-lhs",["203"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Signin' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Button' is defined but never used.","'axios' is defined but never used.","'Fragment' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getCurrentProfile'. Either include it or remove the dependency array. If 'getCurrentProfile' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["204"],"'Profiler' is defined but never used.","'res' is assigned a value but never used.","'Link' is defined but never used.","React Hook useEffect has missing dependencies: 'getCurrentProfile', 'profile.college', 'profile.gradeLevel', 'profile.major', and 'profile.shortBio'. Either include them or remove the dependency array. If 'getCurrentProfile' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["205"],"'courses' is assigned a value but never used.","'setCourses' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"206","fix":"207"},{"desc":"208","fix":"209"},"Update the dependencies array to be: [getCurrentProfile]",{"range":"210","text":"211"},"Update the dependencies array to be: [getCurrentProfile, loading, profile.college, profile.gradeLevel, profile.major, profile.shortBio]",{"range":"212","text":"213"},[511,513],"[getCurrentProfile]",[1071,1080],"[getCurrentProfile, loading, profile.college, profile.gradeLevel, profile.major, profile.shortBio]"]